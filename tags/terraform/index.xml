<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Terraform on Green Reed Technology - Technology without boundaries</title><link>https://martezr.github.io/greenreedtech-website/tags/terraform/</link><description>Recent content in Terraform on Green Reed Technology - Technology without boundaries</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 20 May 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://martezr.github.io/greenreedtech-website/tags/terraform/index.xml" rel="self" type="application/rss+xml"/><item><title>Detecting HashiCorp Vault Root Token Generation</title><link>https://martezr.github.io/greenreedtech-website/detecting-hashicorp-vault-root-token-generation/</link><pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate><guid>https://martezr.github.io/greenreedtech-website/detecting-hashicorp-vault-root-token-generation/</guid><description>HashiCorp Vault generates a default root token during installation and best practice dictates that the token should be revoked once the deployment has been setup. There are certain critical operations that can only be carried out by a root token and requires that a new root token be generated. Given the immense power that the root token garners it would be ideal to identify when a root token is generated.</description></item><item><title>Detecting HashiCorp Vault Root Login</title><link>https://martezr.github.io/greenreedtech-website/detecting-hashicorp-vault-root-login/</link><pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate><guid>https://martezr.github.io/greenreedtech-website/detecting-hashicorp-vault-root-login/</guid><description>Security of a HashiCorp Vault deployment is of paramount importance given the sensitive nature of the information contained within the platform. During the initial configuration process the root token is used to perform the setup and should be used to create less privileged named accounts. These accounts should be used for day to day administration of the Vault deployment and the root token should only be used in scenarios where it is absolutely necessary.</description></item><item><title>Puppet Bolt Vault Inventory Plugin</title><link>https://martezr.github.io/greenreedtech-website/puppet-bolt-vault-inventory-plugin/</link><pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate><guid>https://martezr.github.io/greenreedtech-website/puppet-bolt-vault-inventory-plugin/</guid><description>In this blog post we&amp;rsquo;ll look at the HashiCorp Vault plugin for Puppet Bolt that enables authentication credentials for Bolt to be retrieved from an instance of HashiCorp Vault. HashiCorp Vault is a secrets management platform that is commonly used to store secrets such as API keys, passwords and SSH private keys.</description></item><item><title>Puppet Bolt Terraform Inventory Plugin</title><link>https://martezr.github.io/greenreedtech-website/puppet-bolt-terraform-inventory-plugin/</link><pubDate>Sun, 06 Oct 2019 00:00:00 +0000</pubDate><guid>https://martezr.github.io/greenreedtech-website/puppet-bolt-terraform-inventory-plugin/</guid><description>HashiCorp Terraform is a popular Infrastructure as Code (IaC) tool that is used for provisioning virtual machines or cloud instances along with other resources. Once a virtual machine or cloud instance is provisioned typically it still needs to be configured which includes security baselines, application dependency configuration and even application deployment.</description></item><item><title>Terraform Puppet Provisioner</title><link>https://martezr.github.io/greenreedtech-website/terraform-puppet-provisioner/</link><pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate><guid>https://martezr.github.io/greenreedtech-website/terraform-puppet-provisioner/</guid><description>HashiCorp Terraform 0.12.2 added official support for a Puppet provisioner. One caveat is that the provisioner is only available in 0.12.x of Terraform. The provisioner provides a number of features such as adding data to the CSR for trusted facts, selecting between open source and enterprise agent versions along with autosigning the CSR.</description></item><item><title>vSphere Immutable Infrastructure with Terraform</title><link>https://martezr.github.io/greenreedtech-website/vsphere-immutable-infrastructure-with-terraform/</link><pubDate>Fri, 13 Oct 2017 16:56:47 +0600</pubDate><guid>https://martezr.github.io/greenreedtech-website/vsphere-immutable-infrastructure-with-terraform/</guid><description>What is immutable infrastructure? Immutable infrastructure is the concept of utilizing an infrastructure component in an ephemeral manner. This means that the component can be destroyed and recreated at will without major impact.
Advantages
Troublesome instances can easily be destroyed and recreated. System patching processes are replaced by just provisioning instances from a new template.</description></item><item><title>Jenkins Job Builder</title><link>https://martezr.github.io/greenreedtech-website/jenkins-job-builder/</link><pubDate>Wed, 13 Jan 2016 00:00:00 +0000</pubDate><guid>https://martezr.github.io/greenreedtech-website/jenkins-job-builder/</guid><description>Recently a co-worker of mine (Thanks Ken Erwin) introduced me to Jenkins Job Builder (http://docs.openstack.org/infra/jenkins-job-builder/) which is a project created by the OpenStack infrastructure team that aims to automate the creation of Jenkins Jobs. The software is written in python and utilizes either yaml or json files as the framework for creating Jenkins jobs.</description></item></channel></rss>