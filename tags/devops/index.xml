<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DevOps on Green Reed Technology - Technology without boundaries</title><link>https://www.greenreedtech.com/tags/devops/</link><description>Recent content in DevOps on Green Reed Technology - Technology without boundaries</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 23 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.greenreedtech.com/tags/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>Integrating Gitness with Jenkins</title><link>https://www.greenreedtech.com/integrating-gitness-with-jenkins/</link><pubDate>Tue, 23 Apr 2024 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/integrating-gitness-with-jenkins/</guid><description>&lt;p>Jenkins is a popular open source CI server and many that are familiar with it often have a bit of a love/hate relationship. That being said, it is an incredibly powerful and flexible tool that is often used when there&amp;rsquo;s a need for a platform for building CI/CD pipelines to deploy code or infrastructure.&lt;/p></description></item><item><title>Getting Started with Gitness</title><link>https://www.greenreedtech.com/getting-started-with-gitness/</link><pubDate>Thu, 11 Apr 2024 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/getting-started-with-gitness/</guid><description>&lt;p>With everything being defined as code nowadays, there&amp;rsquo;s a need for a place to store and version that code. The popular selection would be a version control system (VCS) and more specifically, a git server. There&amp;rsquo;s a myriad of options that include hosted solutions such as Github, Azure DevOps, GitLab.com as well as self-hosted solutions such as Gogs, Gitea, and Gitlab. At this point I&amp;rsquo;ve used all of the aformentioned solutions but given that I do most of my tinkering in my homelab, I was looking for a self-hosted solution. A primary requirement was a simple and lightweight solution without all of the bells and whistles as I mainly needed it for just source control. I had heard about Harness introducing a VCS solution (&lt;a href="https://gitness.com/">gitness&lt;/a>) sometime ago but hadn&amp;rsquo;t gotten around to kicking the tires.&lt;/p></description></item><item><title>Getting Started with Argo Workflows</title><link>https://www.greenreedtech.com/getting-started-with-argo-workflows/</link><pubDate>Sun, 11 Feb 2024 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/getting-started-with-argo-workflows/</guid><description>&lt;p>One of the technologies that I find the most enjoyable working with are orchestration solutions that are used to stitch together complex processes. Over my career I&amp;rsquo;ve worked with solutions like VMware vRealize Orchestrator (vRO), StackStorm, as well as countless CI/CD platforms that are commonly used to orchestrate various processes. In this blog post we&amp;rsquo;ll take a look at a solution that I&amp;rsquo;ve been meaning to try out for quite some time in Argo Workflows. This is part of the broader umbrella of projects that includes ArgoCD, the popular GitOps solution for Kubernetes.&lt;/p></description></item><item><title>Detecting HashiCorp Vault Policy Changes</title><link>https://www.greenreedtech.com/detecting-hashicorp-vault-policy-changes/</link><pubDate>Wed, 13 Jul 2022 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/detecting-hashicorp-vault-policy-changes/</guid><description>&lt;p>Security of a HashiCorp Vault deployment is of paramount importance given the sensitive nature of the information contained within the platform. Policies within the platform are used to grant and deny access to the sensitive information stored in the platform.&lt;/p>
&lt;p>All operations in HashiCorp Vault are audited and can be shipped to a centralized logging server. In this scenario we want to utilize the audit log to find out when a policy is changed outside of the CI/CD process used to define all of our policies using code.&lt;/p></description></item><item><title>HashiCorp Terraform Checksum Verification</title><link>https://www.greenreedtech.com/hashicorp-terraform-checksum-verification/</link><pubDate>Tue, 17 May 2022 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/hashicorp-terraform-checksum-verification/</guid><description>&lt;p>How do we verify that the Terraform binary we download is the same as the one HashiCorp produced?&lt;/p>
&lt;p>Ensuring the integrity of software is important to help prevent a malicious actor from tricking us into using a modified version of Terraform as well as ensuring the version we&amp;rsquo;re using isn&amp;rsquo;t corrupted. Checksums are used when there is a need to verify the integrity of software or data. The checksum process compares hashes of the software similar to how fingerprints are used for verification.&lt;/p></description></item><item><title>HashiCorp Terraform Code Signing</title><link>https://www.greenreedtech.com/hashicorp-terraform-code-signing/</link><pubDate>Mon, 16 May 2022 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/hashicorp-terraform-code-signing/</guid><description>&lt;p>Signing software has become critically important given the recent supply chain attacks. How do we verify that the software we&amp;rsquo;re downloading is actually created by who believe created the software? In this case we want to ensure that the Terraform binary we&amp;rsquo;re downloading was created by HashiCorp. This helps prevent a scenario where a malicious actor tricks you into downloading a compromised version of Terraform.&lt;/p></description></item><item><title>Building a Lightweight Container Host for VMware vSphere</title><link>https://www.greenreedtech.com/building-a-lightweight-container-host-for-vmware-vsphere/</link><pubDate>Fri, 22 Apr 2022 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/building-a-lightweight-container-host-for-vmware-vsphere/</guid><description>&lt;p>Containerization and Kubernetes have dominated the IT conversation for the last handful of years. Containers enable rapid development, application portability and a myriad of other benefits. Containers rely on a host operating system in order to run and ideally it would be one that is extremely lightweight since the apps running in the containers are what we really care about.&lt;/p></description></item><item><title>Enabling Cloud Workload Identity for vSphere Virtual Machines</title><link>https://www.greenreedtech.com/enabling-cloud-workload-identity-for-vsphere-virtual-machines/</link><pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/enabling-cloud-workload-identity-for-vsphere-virtual-machines/</guid><description>&lt;p>One of the major benefits of using the public cloud is the integrated identity and access management (IAM). This simplifies the process of granting workloads access to other cloud services. Think about how an AWS EC2 instance is granted access to write objects to an S3 bucket. An IAM role is assigned to the instance which has a policy that grants the S3 access. This enables AWS CLI tools and application built upon the AWS SDK to access the bucket without explicitly providing credentials.&lt;/p></description></item><item><title>HashiCorp Vault Unique AppRole Identity Logging</title><link>https://www.greenreedtech.com/hashicorp-vault-unique-approle-identity-logging/</link><pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/hashicorp-vault-unique-approle-identity-logging/</guid><description>&lt;p>HashiCorp Vault supports several authentication methods for human and non-human access. Several of the non-human authentication methods are tied to specific platforms or clouds such as AWS, Kubernetes, Azure, and others. For workloads that are running on non-supported platforms, the AppRole authentication method is typically recommended for authentication. The AppRole method uses a role as the core construct as the name implies. In order to authenticate a role ID and a secret ID are required.&lt;/p></description></item><item><title>VMware vSphere VM iPXE Boot without DHCP</title><link>https://www.greenreedtech.com/vmware-vsphere-vm-ipxe-boot-without-dhcp/</link><pubDate>Fri, 27 Aug 2021 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/vmware-vsphere-vm-ipxe-boot-without-dhcp/</guid><description>&lt;p>Network booting operating systems isn’t a new concept and has been around for years. Bare metal deployments are typically where network booting is commonly used. Most network cards are equipped with a network boot rom that enables the server to boot from the network using the PXE protocol. The PXE protocol is an old protocol that offers limited functionality. iPXE (&lt;a href="https://ipxe.org/">https://ipxe.org/&lt;/a>) is an open source network boot firmware that extends PXE with additional functionality. Network booting comes with a number of challenges, primarily configuring and managing the associated infrastructure required (DHCP, TFTP, etc.). TFTP isn’t typically used in most IT environments and DHCP isn’t commonly available on networks or VLANs used for hosting servers.&lt;/p></description></item><item><title>HashiCorp Vault vSphere Authentication with VMware Event Broker Appliance (VEBA)</title><link>https://www.greenreedtech.com/hashicorp-vault-vsphere-authentication-with-vmware-event-broker-appliance-veba/</link><pubDate>Tue, 16 Feb 2021 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/hashicorp-vault-vsphere-authentication-with-vmware-event-broker-appliance-veba/</guid><description>&lt;p>HashiCorp Vault supports a number of authentication methods including methods that utilize what HashiCorp refers to as a &amp;ldquo;trusted platform&amp;rdquo;. These include public clouds such as AWS, Azure and GCP along with platforms like Kubernetes. This method of authentication simplifies the introduction of the initial credential or secret that a workload must present to Vault by making use of information about itself that it already knows. The information that is provided to the instance or Kubernetes pod by the platform is metadata typically in the form of cryptographic data. This metadata is presented to HashiCorp Vault for authentication and verified by an API call to the underlying platform.&lt;/p></description></item><item><title>Deployment Pipeline Chaos Engineering with StackStorm and ChaosToolkit</title><link>https://www.greenreedtech.com/deployment-pipeline-chaos-engineering-with-stackstorm-and-chaostoolkit/</link><pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/deployment-pipeline-chaos-engineering-with-stackstorm-and-chaostoolkit/</guid><description>&lt;p>Chaos Engineering is the practice of experimenting or injecting faults into a system to test how the system responds to the failure (&lt;a href="https://principlesofchaos.org">https://principlesofchaos.org&lt;/a>). Chaos Engineering is still new for many organizations and can be a daunting practice to adopt at first but even baby steps into the practice can be immediately beneficial.&lt;/p></description></item><item><title>Identifying Active HashiCorp Vault Root Tokens</title><link>https://www.greenreedtech.com/identifying-active-hashicorp-vault-root-tokens/</link><pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/identifying-active-hashicorp-vault-root-tokens/</guid><description>&lt;p>Revoking the root token on a production HashiCorp Vault deployment is one of the recommended best practices for securing an instance of HashiCorp Vault. The actual process to revoke the root token is fairly straightforward by running the &lt;code>vault token revoke&lt;/code> command and providing the root token at the command line. In a previous blog post we looked at how to detect when a new root token has been generated. This might be necessary to perform certain operations that require root to carry out. One thing to be aware of is that multiple root tokens can be active at a single moment in time so there is no one root token but potentially many. With the potential for multiple root tokens we need a way to determine if there are any currently active root tokens on our Vault deployment.&lt;/p></description></item><item><title>Detecting HashiCorp Vault Root Token Generation</title><link>https://www.greenreedtech.com/detecting-hashicorp-vault-root-token-generation/</link><pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/detecting-hashicorp-vault-root-token-generation/</guid><description>&lt;p>HashiCorp Vault generates a default root token during installation and best practice dictates that the token should be revoked once the deployment has been setup. There are certain critical operations that can only be carried out by a root token and requires that a new root token be generated. Given the immense power that the root token garners it would be ideal to identify when a root token is generated. In this example we&amp;rsquo;ll utilize the Vault audit log to determine when the process to generate a new root token is started and when it is successfully completed. Splunk will be used as our centralized logging server in this example.&lt;/p></description></item><item><title>Detecting HashiCorp Vault Root Login</title><link>https://www.greenreedtech.com/detecting-hashicorp-vault-root-login/</link><pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/detecting-hashicorp-vault-root-login/</guid><description>&lt;p>Security of a HashiCorp Vault deployment is of paramount importance given the sensitive nature of the information contained within the platform. During the initial configuration process the root token is used to perform the setup and should be used to create less privileged named accounts. These accounts should be used for day to day administration of the Vault deployment and the root token should only be used in scenarios where it is absolutely necessary. The reason for this is the all-powerful privileges that the root token wields on the platform. Based upon this information it is critical to know whenever the root token is used to log into the Vault deployment and that&amp;rsquo;s what will be covered in this blog post.&lt;/p></description></item><item><title>Puppet Bolt Vault Inventory Plugin</title><link>https://www.greenreedtech.com/puppet-bolt-vault-inventory-plugin/</link><pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/puppet-bolt-vault-inventory-plugin/</guid><description>&lt;p>In this blog post we&amp;rsquo;ll look at the HashiCorp Vault plugin for Puppet Bolt that enables authentication credentials for Bolt to be retrieved from an instance of HashiCorp Vault. HashiCorp Vault is a secrets management platform that is commonly used to store secrets such as API keys, passwords and SSH private keys. This solution helps to avoid secret sprawl where passwords and credentials are widely distributed across an environment making it difficult to track where they are.&lt;/p></description></item><item><title>Puppet Bolt Terraform Inventory Plugin</title><link>https://www.greenreedtech.com/puppet-bolt-terraform-inventory-plugin/</link><pubDate>Sun, 06 Oct 2019 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/puppet-bolt-terraform-inventory-plugin/</guid><description>&lt;p>HashiCorp Terraform is a popular Infrastructure as Code (IaC) tool that is used for provisioning virtual machines or cloud instances along with other resources. Once a virtual machine or cloud instance is provisioned typically it still needs to be configured which includes security baselines, application dependency configuration and even application deployment. The tasks are generally accomplished with a Configuration Management (CM) tool such as Puppet or Puppet Bolt.&lt;/p></description></item><item><title>Advanced VMware vSphere Template Orchestration</title><link>https://www.greenreedtech.com/advanced-vmware-vsphere-template-orchestration/</link><pubDate>Tue, 06 Aug 2019 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/advanced-vmware-vsphere-template-orchestration/</guid><description>&lt;p>Template management is a critical facet of infrastructure management and traditionally one of the more challenging operations there is. The advent of tools like HashiCorp Packer have provided administrators with the ability declaratively automate the template creation process.&lt;/p>
&lt;p>Automation is great but in most organizations a single piece of automation is part of a larger process that includes tickets and potentially other hand offs.&lt;/p></description></item><item><title>Terraform Puppet Provisioner</title><link>https://www.greenreedtech.com/terraform-puppet-provisioner/</link><pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/terraform-puppet-provisioner/</guid><description>&lt;p>HashiCorp Terraform 0.12.2 added official support for a Puppet provisioner. One caveat is that the provisioner is only available in 0.12.x of Terraform. The provisioner provides a number of features such as adding data to the CSR for trusted facts, selecting between open source and enterprise agent versions along with autosigning the CSR.&lt;/p></description></item><item><title>Vault Hardening Compliance using Chef InSpec</title><link>https://www.greenreedtech.com/vault-hardening-compliance-using-chef-inspec/</link><pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/vault-hardening-compliance-using-chef-inspec/</guid><description>&lt;p>HashiCorp Vault is quickly becoming the defacto secrets management platform used in environments that rely on DevOps concepts for application delivery. Vault is incredibly easy and simple to get started with but takes a bit of thought and planning to operationalize it.&lt;/p>
&lt;p>One of the challenges is ensuring that the installation of your security platform is secure. Chef InSpec is a compliance as code tool that allows us to create profiles that outline a desired security posture. In this post we&amp;rsquo;re looking at an example InSpec profile for Vault that mimics some of the common controls found in industry standards such as CIS benchmarks and DISA STIGs.&lt;/p></description></item><item><title>Vault Audit Logging</title><link>https://www.greenreedtech.com/vault-audit-logging/</link><pubDate>Thu, 01 Feb 2018 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/vault-audit-logging/</guid><description>&lt;p>Vault (&lt;a href="https://www.vaultproject.io/">https://www.vaultproject.io/&lt;/a>) is a secrets management tool created by HashiCorp that is extremely popular. Given the sensitive nature of the data being stored by a Vault server it is critical that auditing be configured appropriately to provide a record of who accessed sensitive data and when it was accessed. In this blog post we&amp;rsquo;ll walk through configuring a Vault server for auditing and dump the log entries to an AWS S3 bucket for centralized storage.&lt;/p></description></item><item><title>Terraform AWS S3 State Management Least Privilege</title><link>https://www.greenreedtech.com/terraform-aws-s3-state-management-least-privilege/</link><pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/terraform-aws-s3-state-management-least-privilege/</guid><description>&lt;p>A very popular Terraform state management configuration is to utilize AWS S3 for state management and AWS DynamoDB for state locking. The problem is that there does not appear to be a publicly available document that details the minimum privileges required by an AWS user or role to leverage AWS S3 and DynamoDB for Terraform state management.&lt;/p></description></item><item><title>vSphere Immutable Infrastructure with Terraform</title><link>https://www.greenreedtech.com/vsphere-immutable-infrastructure-with-terraform/</link><pubDate>Fri, 13 Oct 2017 16:56:47 +0600</pubDate><guid>https://www.greenreedtech.com/vsphere-immutable-infrastructure-with-terraform/</guid><description>&lt;h2 id="what-is-immutable-infrastructure">What is immutable infrastructure?&lt;/h2>
&lt;p>Immutable infrastructure is the concept of utilizing an infrastructure component in an ephemeral manner. This means that the component can be destroyed and recreated at will without major impact.&lt;/p>
&lt;p>&lt;strong>Advantages&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Troublesome instances can easily be destroyed and recreated.&lt;/li>
&lt;li>System patching processes are replaced by just provisioning instances from a new template.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Terraform&lt;/strong>&lt;/p></description></item><item><title>vSphere Alarms with Slack and StackStorm</title><link>https://www.greenreedtech.com/vsphere-alarms-with-slack-and-stackstorm/</link><pubDate>Fri, 03 Feb 2017 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/vsphere-alarms-with-slack-and-stackstorm/</guid><description>&lt;p>Being notified of when something happens in your environment has always been important and has evolved over time from basic emails to IM messages via tools like Slack.&lt;/p>
&lt;p>This post will cover posting alarm information to Slack via StackStorm. In addition post alarm information to Slack we can take autoremediation actions in response to alarms which we&amp;rsquo;ll cover in later posts.&lt;/p></description></item><item><title>Jenkins Certified Engineer: Folders</title><link>https://www.greenreedtech.com/jenkins-certified-engineer-folders/</link><pubDate>Thu, 14 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/jenkins-certified-engineer-folders/</guid><description>&lt;p>This post covers the section listed below on the Certified Jenkins Engineer (CJE) exam.&lt;/p>
&lt;p>Section #3: Building Continuous Delivery (CD) Pipelines&lt;/p>
&lt;p>Folders&lt;/p>
&lt;ul>
&lt;li>How to control access to items in Jenkins with folders&lt;/li>
&lt;li>Referencing jobs in folders&lt;/li>
&lt;/ul>
&lt;h4 id="what-are-folders">What are folders?&lt;/h4>
&lt;p>Jenkins provides the ability to organize jobs into a hierarchical manner with the &lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/CloudBees+Folders+Plugin">CloudBees Folders Plugin&lt;/a>. This allows us to manage the jobs much like we would files on a file system. Folders can also be used to manage permissions on a per folder basis to ease security administration.&lt;/p></description></item><item><title>Jenkins Certified Engineer: Fingerprints</title><link>https://www.greenreedtech.com/jenkins-certified-engineer-fingerprints/</link><pubDate>Tue, 15 Mar 2016 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/jenkins-certified-engineer-fingerprints/</guid><description>&lt;p>This post covers the section listed below on the Certified Jenkins Engineer (CJE) exam.&lt;/p>
&lt;p>&lt;strong>Section #1: Key CI/CD/Jenkins Concepts&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Fingerprints&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>What are fingerprints?&lt;/strong>&lt;/li>
&lt;li>&lt;strong>How do fingerprints work?&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h4 id="what-are-fingerprints">What are fingerprints?&lt;/h4>
&lt;p>Jenkins utilizes fingerprints for tracking a specific instance of a file. This is critically important when attempting to determine which particular version of a file was used during a build. The fingerprint of a file is simply a MD5 checksum that can be used for comparing files.&lt;/p></description></item><item><title>Jenkins Job Builder</title><link>https://www.greenreedtech.com/jenkins-job-builder/</link><pubDate>Wed, 13 Jan 2016 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/jenkins-job-builder/</guid><description>&lt;p>Recently a co-worker of mine (Thanks Ken Erwin) introduced me to Jenkins Job Builder (&lt;a href="http://docs.openstack.org/infra/jenkins-job-builder/">http://docs.openstack.org/infra/jenkins-job-builder/&lt;/a>) which is a project created by the OpenStack infrastructure team that aims to automate the creation of Jenkins Jobs. The software is written in python and utilizes either yaml or json files as the framework for creating Jenkins jobs. A list of some of the primary features is provided below.&lt;/p></description></item><item><title>Jenkins Active Directory</title><link>https://www.greenreedtech.com/jenkins-active-directory/</link><pubDate>Fri, 20 Nov 2015 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/jenkins-active-directory/</guid><description>&lt;p>This post covers integrating Jenkins CI server with Microsoft Active Directory to provide centralized authentication.&lt;/p>
&lt;h3 id="step-1---install-he-active-directory-plugin">Step #1 - Install he Active Directory plugin&lt;/h3>
&lt;p>&lt;strong>Click &amp;ldquo;Manage Jenkins&amp;rdquo; from the sidebar&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://s3.us-west-2.amazonaws.com/greenreedtech.com/jce_folders/Jenkins_AD_1.png" alt="">&lt;/p>
&lt;p>&lt;strong>Click &amp;ldquo;Manage Plugins&amp;rdquo; to install the Active Directory plugin&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://s3.us-west-2.amazonaws.com/greenreedtech.com/jce_folders/Jenkins_AD_2.png" alt="">&lt;/p>
&lt;p>&lt;strong>Click on the &amp;ldquo;Available&amp;rdquo; tab, enter &amp;ldquo;Active Directory&amp;rdquo; in the &amp;ldquo;Filter:&amp;rdquo; search box, click the checkbox next to &amp;ldquo;Active Directory plugin&amp;rdquo; and finally click &amp;ldquo;Download now and install after restart&amp;rdquo;&lt;/strong>&lt;/p></description></item></channel></rss>