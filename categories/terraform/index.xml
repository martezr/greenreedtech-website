<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Terraform on Green Reed Technology - Technology without boundaries</title><link>https://www.greenreedtech.com/categories/terraform/</link><description>Recent content in Terraform on Green Reed Technology - Technology without boundaries</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 10 Jul 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://www.greenreedtech.com/categories/terraform/index.xml" rel="self" type="application/rss+xml"/><item><title>Terraform Puppet Provisioner</title><link>https://www.greenreedtech.com/terraform-puppet-provisioner/</link><pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/terraform-puppet-provisioner/</guid><description>HashiCorp Terraform 0.12.2 added official support for a Puppet provisioner. One caveat is that the provisioner is only available in 0.12.x of Terraform. The provisioner provides a number of features such as adding data to the CSR for trusted facts, selecting between open source and enterprise agent versions along with autosigning the CSR.</description></item><item><title>Terraform AWS S3 State Management Least Privilege</title><link>https://www.greenreedtech.com/terraform-aws-s3-state-management-least-privilege/</link><pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/terraform-aws-s3-state-management-least-privilege/</guid><description>A very popular Terraform state management configuration is to utilize AWS S3 for state management and AWS DynamoDB for state locking. The problem is that there does not appear to be a publicly available document that details the minimum privileges required by an AWS user or role to leverage AWS S3 and DynamoDB for Terraform state management.</description></item><item><title>vSphere Immutable Infrastructure with Terraform</title><link>https://www.greenreedtech.com/vsphere-immutable-infrastructure-with-terraform/</link><pubDate>Fri, 13 Oct 2017 16:56:47 +0600</pubDate><guid>https://www.greenreedtech.com/vsphere-immutable-infrastructure-with-terraform/</guid><description>What is immutable infrastructure? Immutable infrastructure is the concept of utilizing an infrastructure component in an ephemeral manner. This means that the component can be destroyed and recreated at will without major impact.
Advantages
Troublesome instances can easily be destroyed and recreated. System patching processes are replaced by just provisioning instances from a new template.</description></item><item><title>Jenkins Job Builder</title><link>https://www.greenreedtech.com/jenkins-job-builder/</link><pubDate>Wed, 13 Jan 2016 00:00:00 +0000</pubDate><guid>https://www.greenreedtech.com/jenkins-job-builder/</guid><description>Recently a co-worker of mine (Thanks Ken Erwin) introduced me to Jenkins Job Builder (http://docs.openstack.org/infra/jenkins-job-builder/) which is a project created by the OpenStack infrastructure team that aims to automate the creation of Jenkins Jobs. The software is written in python and utilizes either yaml or json files as the framework for creating Jenkins jobs.</description></item></channel></rss>