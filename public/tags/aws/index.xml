<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>aws on Green Reed Technology - Technology without boundaries</title>
    <link>https://www.greenreedtech.com/tags/aws/</link>
    <description>Recent content in aws on Green Reed Technology - Technology without boundaries</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 30 Oct 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://www.greenreedtech.com/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Terraform AWS S3 State Management Least Privilege</title>
      <link>https://www.greenreedtech.com/terraform-aws-s3-state-management-least-privilege/</link>
      <pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.greenreedtech.com/terraform-aws-s3-state-management-least-privilege/</guid>
      <description>A very popular Terraform state management configuration is to utilize AWS S3 for state management and AWS DynamoDB for state locking. The problem is that there does not appear to be a publicly available document that details the minimum privileges required by an AWS user or role to leverage AWS S3 and DynamoDB for Terraform state management.</description>
    </item>
    
  </channel>
</rss>
